package com.vikas.projects.oauth.client.controllers;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class ClientController {
	
	private String state = null;
	private String access_token = null;
	private String scope = null;

	@GetMapping("/")
	public String indexRenderer(Model model) {
		model.addAttribute("access_token", access_token);
		model.addAttribute("scope", scope);
		return "index";
	}
	
	@GetMapping("/authorize")
	public String authorizeRenderer(HttpServletResponse response) {
		//String builder = UriComponentsBuilder.fromUriString("http://localhost:9001/authorize").queryParam(access_token, "123").build().encode().toUriString();
		Map<String, String> requestParams = new HashMap<>();
	    requestParams.put("key1", "value 1");
	    requestParams.put("key2", "value@!$2");
	    requestParams.put("key3", "value%3");
	 
	    String encodedURL = requestParams.keySet().stream()
	      .map(key -> key + "=" + encodeValue(requestParams.get(key)))
	      .collect(joining("&", "http://www.baeldung.com?", ""));
		System.out.println(builder);
		return "redirect:"+builder;
	}
	
	private String encodeValue(String value) {
	    try {
			return URLEncoder.encode(value, StandardCharsets.UTF_8.toString());
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
